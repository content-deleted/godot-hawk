 - fix annoying exception 'cannot open file that already exists' when re-opening the shared memory buffer sometimes (only happens in edit mode)
 X option for running bizhawk in edit mode
   - it's a bit janky still, fix it
 - fix flaky build script by making a custom build pipeline
 X pass audio from bizhawk to unity over ipc [currently bizhawk is just playing its own audio via directx]
   - working and audio is pretty clean but there is some latency (maybe 20ms) and the implementation is not great (see below)
 - generic message passing (or rpc) interface (e.g. for calling api functions from unityhawk, or unity functions from lua)
  - with the aim being to facilitate communication between bizhawk instances i guess
 - custom lua libs, etc
 - have a nice interface (for unityhawk users) to interact with the bizhawk apis (e.g. for loading state, reading/writing memory, etc)

 - update BizHawk (to 2.9.1?)

 - mac / linux support?? may be possible if the unsupported dependencies on mac os are input / grahpics / audio related
  - [have made some progress on this but current blocker is the SharedMemory library seeming to not work on mac]

 - cleanup code
  - move nasty audio stuff into another class
  - probably separate all the de/serialization, shared buffer & rpc stuff into separate files too
 - improve audio implementation
  - two separate rpc channels seems unnecessary and probably increases latency
  - i think it would make a lot more sense to do resampling on the unity side instead of bizhawk side, that would simplify the rpc stuff too
   - maybe just copy the code from SoundOutputProvider.cs, rather than have a depedency on a bunch of bizhawk dlls

minor:
 - ideally put the protocol / schema for the texture buffer format (and input/audio in the future) somewhere shared
 X notify unity (maybe crash) if/when emuhawk is closed
 - pause bizhawk when unity editor is paused [https://docs.unity3d.com/ScriptReference/EditorApplication-pauseStateChanged.html]
 - should log an error if unable to connect to ipc buffers after x amount of time